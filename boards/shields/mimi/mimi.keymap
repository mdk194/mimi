/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
#define ZMK_POINTING_DEFAULT_MOVE_VAL 1000  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 16    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    tapping-term-ms = <260>;
    flavor = "balanced";
    quick-tap-ms = <200>;
    require-prior-idle-ms = <160>;
};

&lt {
    tapping-term-ms = <180>;
    flavor = "hold-preferred";
    quick-tap-ms = <200>;
    require-prior-idle-ms = <160>;
};

&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};

/ {
    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <160>;
            tapping-term-ms = <260>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 42 43 44 45 46 47>;
            hold-trigger-on-release;
        };
        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <160>;
            tapping-term-ms = <260>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
            hold-trigger-on-release;
        };
    };
};

/ {
    combos {
        compatible = "zmk,combos";
        combo_enter {
            timeout-ms = <30>;
            key-positions = <31 32>; // jk -> enter
            bindings = <&kp RET>;
        };
        combo_up {
            timeout-ms = <30>;
            key-positions = <19 20>; // ui -> up
            bindings = <&kp UP>;
        };
        combo_down {
            timeout-ms = <30>;
            key-positions = <43 44>; // m, -> down
            bindings = <&kp DOWN>;
        };
        combo_pg_up {
            timeout-ms = <30>;
            key-positions = <15 16>; // er -> left
            bindings = <&kp LEFT>;
        };
        combo_pg_down {
            timeout-ms = <30>;
            key-positions = <39 40>; // cv -> right
            bindings = <&kp RIGHT>;
        };
        combo_capsword {
            timeout-ms = <30>;
            key-positions = <36 47>; // lshift rshift
            bindings = <&caps_word>;
        };
        combo_capsword_df {
            timeout-ms = <30>;
            key-positions = <27 28>; // df -> cap words
            bindings = <&caps_word>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp GRAVE       &kp N1 &kp N2   &kp N3   &kp N4    &kp N5                              &kp N6          &kp N7    &kp N8    &kp N9   &kp N0   &kp MINUS
&kp TAB         &kp Q  &kp W    &kp E    &kp R     &kp T                               &kp Y           &kp U     &kp I     &kp O    &kp P    &kp BSLH
&mt LALT ESC    &kp A  &kp S    &kp D    &kp F     &kp G                               &kp H           &kp J     &kp K     &kp L    &kp SEMI &mt RALT SQT
&mt LSHFT LPAR  &kp Z  &kp X    &kp C    &kp V     &kp B                               &kp N           &kp M     &kp COMMA &kp DOT  &kp FSLH &mt RSHFT RPAR
                                &kp LGUI &mt LCTRL BSPC  &lt 1 LBKT         &lt 1 RBKT &mt RCTRL SPACE &mt RGUI EQUAL
            >;
        };

        lower_layer {
            bindings = <
&kp F12      &kp F1    &kp F2   &kp F3   &kp F4   &kp F5                               &kp F6         &kp F7         &kp F8       &kp F9          &kp F10   &kp F11
&bt BT_CLR   &kp STAR  &kp N7   &kp N8   &kp N9   &kp PLUS                             &msc SCRL_LEFT &msc SCRL_DOWN &msc SCRL_UP &msc SCRL_RIGHT &mkp MB1  &kp PG_UP
&bt BT_SEL 0 &kp FSLH  &kp N4   &kp N5   &kp N6   &kp MINUS                            &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_UP &mmv MOVE_RIGHT &mkp MB3  &kp PG_DN
&bt BT_SEL 1 &kp DOT   &kp N1   &kp N2   &kp N3   &kp N0                               &kp LEFT       &kp DOWN       &kp UP       &kp RIGHT       &mkp MB2  &kp DEL
                                &trans   &trans   &trans                               &trans         &trans         &trans
            >;
        };

        raise_layer {
            bindings = <
&kp F12      &kp F1    &kp F2   &kp F3   &kp F4   &kp F5                               &kp F6         &kp F7         &kp F8       &kp F9          &kp F10   &kp F11
&trans       &kp STAR  &kp N7   &kp N8   &kp N9   &kp PLUS                             &msc SCRL_LEFT &msc SCRL_DOWN &msc SCRL_UP &msc SCRL_RIGHT &mkp MB1  &kp PG_UP
&trans       &kp FSLH  &kp N4   &kp N5   &kp N6   &kp MINUS                            &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_UP &mmv MOVE_RIGHT &mkp MB3  &kp PG_DN
&trans       &kp DOT   &kp N1   &kp N2   &kp N3   &kp N0                               &kp LEFT       &kp DOWN       &kp UP       &kp RIGHT       &mkp MB2  &kp DEL
                                 &trans   &trans  &trans                               &trans        &trans          &trans
            >;
        };
    };
};


